<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 考研/bo? | Wing of Dream 梦境之翼]]></title>
  <link href="http://www.hanyi.name/blog/categories/kao-yan-slash-bo/atom.xml" rel="self"/>
  <link href="http://www.hanyi.name/"/>
  <updated>2019-03-10T18:00:41-04:00</updated>
  <id>http://www.hanyi.name/</id>
  <author>
    <name><![CDATA[Han Yi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[次日依然悲剧]]></title>
    <link href="http://www.hanyi.name/blog/2010/04/10/ci-ri-yi-ran-bei-ju/"/>
    <updated>2010-04-10T18:15:15+08:00</updated>
    <id>http://www.hanyi.name/blog/2010/04/10/ci-ri-yi-ran-bei-ju</id>
    <content type="html"><![CDATA[<p> 可以预见，这也许会是本版的倒数第二篇文章了。</p>

<p> 有时候真的很担心场外因素介入到正常游戏规则里，然而它还是不可避免地发生了。但是最终的结果却让人感到一些欣慰，或许应该说是庆幸。</p>

<p> 感谢所有人。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[首日悲剧]]></title>
    <link href="http://www.hanyi.name/blog/2010/04/09/shou-ri-bei-ju/"/>
    <updated>2010-04-09T11:43:11+08:00</updated>
    <id>http://www.hanyi.name/blog/2010/04/09/shou-ri-bei-ju</id>
    <content type="html"><![CDATA[<p>第一天就悲剧了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最后一周]]></title>
    <link href="http://www.hanyi.name/blog/2010/04/07/zui-hou-yi-zhou/"/>
    <updated>2010-04-07T20:19:24+08:00</updated>
    <id>http://www.hanyi.name/blog/2010/04/07/zui-hou-yi-zhou</id>
    <content type="html"><![CDATA[<p> 再过一周就要正式录取了，到那时就已较当初决定读研过去了一年时间，复习开始到现在也有9个多月了。我一再提醒自己要重视过程，却没想到是因为结果往往出人意料。</p>

<p> 浩然兄说我当初就应该会后悔，仔细想了一下，确实还从未因为这事儿后悔过。因为这件事从三个月前起本来就远未达到我设想的安全概率，最后倒不如说是万幸。</p>

<p> 但是我的确没有办法使高高在上的人产生丝毫信任感，在我看来评价可以从简单的日常交谈到知识的厚积薄发，事实上它的复杂程度要比我想象中大得多。</p>

<p> 于是就突然又感到有些后悔，想方设法取得信任，这几乎从来都不是我所关心的事情：因为我当然信任我被信任的，而他应具备识别我可以被信任的能力，或者会用一些手段（当然凡是合理的要求我都会接受），否则我怎么能反过来信任他呢？</p>

<p> 记得一位哲学老师在启蒙课上引用了“哲学，就是疯子和傻子的对话”这句经典来描述哲学，问题是人们往往认为自己聪明，剩下的就只有贫穷的哲学工作者了。在追求“智慧”的道路上，已经产生太多悖于真理的观念，但我们根本无法和历史对抗。于是只能安慰自己说“与其想方设法取悦于人，倒不如努力做好自己”。</p>

<p> 我真觉得这些已经不重要了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从极限编程说起]]></title>
    <link href="http://www.hanyi.name/blog/2009/07/02/cong-ji-xian-bian-cheng-shuo-qi/"/>
    <updated>2009-07-02T23:04:34+08:00</updated>
    <id>http://www.hanyi.name/blog/2009/07/02/cong-ji-xian-bian-cheng-shuo-qi</id>
    <content type="html"><![CDATA[<p>实际上这里所说的eXtreme Programming(XP)并不是指某种软件工程方法学，但我们不得不先讨论其意义。</p>

<p><a id="more"></a><a id="more-185"></a></p>

<p>诚然，XP被认为是目前最有成效的敏捷软件开发方法之一，其核心在于将严格定义的规则、流程和相关文档分散成若干小规模过程，并借助动态进化设计实现灵巧的轻量级开发。</p>

<p>表面上，XP的目标是降低用户需求变更所造成的成本增量。这似乎与人们通常所说的“未雨绸缪”有所抵触，也和传统的开发过程之间存在很大出入。然而从社会学的角度来说，XP满足了一种社会变化机制，毕竟历史看起来并不是“照本演绎”的，尽管软件开发存在用户需求，但无论是出于主观原因还是客观原因，这些“需求”并不是一成不变的，XP在面临此类状况时所体现出来的效果，显然要优于其它一些传统的软件开发方法。</p>

<p>现在考虑一个现实中的案例，如果我们的实习期从2009年7月12日正式启动，直到10月下旬，那么摆在面前的就是一个极其复杂的组合调度问题，因为毕竟没有人会幻想剩余最后可怜的两个月能够力挽狂澜。</p>

<p>许多先行者告诉我们执行严格的water-fall方案才有可能到达彼岸，但很明显本案例并不适用这种经典方法。 因而我们需要敏捷，此处敏捷的原因并非需求变化的莫测，而是突发条件的难料，这就迫使我们更加灵巧、轻量地思考这一问题。</p>

<p>但不应忘记，XP方法之所以被称作eXtreme，它期望开发者能够在小规模过程中真正突破eXtreme，并最终实现积流以江、汇江成海。</p>

<p>我并不认为XP缺乏严谨，就如专家定义的XP价值标准:沟通、简单、回馈、勇气和尊重，这些也是我们能最终取得成功的关键因素。</p>

<p><strong>注：一年前的“掩帘向学”仿佛近在咫尺，尽管只持续十多天的思考，却似乎打通了一条向往之路，如今终于步入“关键模块”阶段。鉴于此我不得不逐步减少交流频道的更新，令人惭愧的是一年多来几乎没有一个原创性的连载系列文章能够最终完成，希望将来能有机会继续坐在图书馆里完成它们，这恐怕就是用户当前抽象化的最终需求之一了。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming Competition]]></title>
    <link href="http://www.hanyi.name/blog/2009/04/03/programming-competition/"/>
    <updated>2009-04-03T17:24:35+08:00</updated>
    <id>http://www.hanyi.name/blog/2009/04/03/programming-competition</id>
    <content type="html"><![CDATA[<p> 抽空写了写GPCT 6th，由于空闲时间实在太少，对C#.net也就大概看了半天时间，代码终于越写越冗长&hellip;不过心疼自习时间急剧压缩，还是下决心release了。清明前去村里旧书店淘了几本思修、马原等书回家来看，可是《Programmer》上明明有“RIA战火纷争”呀，看来只能赶明天下午的校车了呵呵。</p>
]]></content>
  </entry>
  
</feed>
